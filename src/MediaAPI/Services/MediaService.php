<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\MediaAPI\Services;

class MediaService extends \DTS\eBaySDK\MediaAPI\Services\MediaBaseService
{
    const API_VERSION = 'v1_beta';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'CreateVideo' => [
            'method' => 'POST',
            'resource' => 'video',
            'responseClass' => '\DTS\eBaySDK\MediaAPI\Types\CreateVideoRestResponse',
            'params' => []
        ],
        'GetVideo' => [
            'method' => 'GET',
            'resource' => 'video/{video_id}',
            'responseClass' => '\DTS\eBaySDK\Account\Types\GetVideoRestResponse',
            'params' => [
                'video_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UploadVideo' => [
            'method' => 'POST',
            'resource' => 'video/{video_id}/upload',
            'responseClass' => '\DTS\eBaySDK\Account\Types\UploadVideoRestResponse',
            'params' => [
                'video_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
    ];

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\CreateVideoRestRequest $request
     * @return \DTS\eBaySDK\MediaAPI\Types\CreateVideoRestResponse
     */
    public function createVideo(\DTS\eBaySDK\MediaAPI\Types\CreateVideoRestRequest $request)
    {
        return $this->createVideoAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\CreateVideoRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createVideoAsync(\DTS\eBaySDK\MediaAPI\Types\CreateVideoRestRequest $request)
    {
        return $this->callOperationAsync('CreateVideo', $request);
    }

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\GetVideoRestRequest $request
     * @return \DTS\eBaySDK\MediaAPI\Types\GetVideoRestResponse
     */
    public function getVideo(\DTS\eBaySDK\MediaAPI\Types\GetVideoRestRequest $request)
    {
        return $this->getVideoAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\GetVideoRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getVideoAsync(\DTS\eBaySDK\MediaAPI\Types\GetVideoRestRequest $request)
    {
        return $this->callOperationAsync('GetVideo', $request);
    }

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\UploadVideoRestRequest $request
     * @return \DTS\eBaySDK\MediaAPI\Types\UploadVideoRestResponse
     */
    public function uploadVideo(\DTS\eBaySDK\MediaAPI\Types\UploadVideoRestRequest $request)
    {
        return $this->uploadVideoAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\MediaAPI\Types\UploadVideoRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function uploadVideoAsync(\DTS\eBaySDK\MediaAPI\Types\UploadVideoRestRequest $request)
    {
        return $this->callOperationAsync('UploadVideo', $request);
    }
}
