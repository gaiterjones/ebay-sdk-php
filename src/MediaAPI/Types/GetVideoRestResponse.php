<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\MediaAPI\Types;

use DTS\eBaySDK\StatusCodeTrait;
use DTS\eBaySDK\HttpHeadersTrait;

/**
 * Class GetVideoRestResponse
 * @property \DTS\eBaySDK\MediaAPI\Types\Play[] $playLists
 * @property \DTS\eBaySDK\MediaAPI\Enums\ClassificationEnum[] $classification
 * @property string $description
 * @property string $expirationDate
 * @property integer $size
 * @property integer $title
 * @property integer $videoId
 * @property string $status
 * @property string $statusMessage
 * @property \DTS\eBaySDK\MediaAPI\Types\Image $thumbnail
 * @package DTS\eBaySDK\MediaAPI\Types
 */
class GetVideoRestResponse extends \DTS\eBaySDK\Types\BaseType
{
    use StatusCodeTrait;
    use HttpHeadersTrait;

    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'playLists' => [
            'type' => '\DTS\eBaySDK\MediaAPI\Types\Play',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'play'
        ],
        'thumbnail' => [
            'type' => '\DTS\eBaySDK\MediaAPI\Types\Image',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'thumbnail'
        ],
        'classification' => [
            'type' => 'string',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'classification'
        ],
        'description' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'description'
        ],
        'expirationDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'expirationDate'
        ],
        'size' => [
            'type' => 'integer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'size'
        ],
        'title' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'title'
        ],
        'videoId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'videoId'
        ],
        'status' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'status'
        ],
        'statusMessage' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'statusMessage'
        ],
        'errors' => [
            'type' => 'DTS\eBaySDK\Inventory\Types\ErrorDetailV3',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'errors'
        ],
        'warnings' => [
            'type' => 'DTS\eBaySDK\Inventory\Types\ErrorDetailV3',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'warnings'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
